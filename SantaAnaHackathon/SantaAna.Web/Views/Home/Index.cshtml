@{
    ViewBag.Title = "Home Page";
}

<div class="container" ng-controller="serviceController as serv">

    <!-- SEARCH BAR -->
    <div class="row" style="display: inline">
        <div class="col-md-2"></div>
        <div class="col-md-8">
            <br />
            <label for="jobSkillTags">Insert Tags</label>
            <tags-input ng-model="serv.currentTags" display-property="name" add-from-autocomplete-only="true" @*on-tag-adding="wizCon.tagCheck($tag)" min-length="2"*@>
                <auto-complete source="serv.currentTagsFilter($query)"></auto-complete>
            </tags-input>
            {{serv.currentTags}}
            <button class="btn btn-success">Search</button>
        </div>
        <div class="col-md-2"></div>
    </div>

    <!-- SERVICE LISTINGS -->
    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-8">

            <a href="/home/about">
                <h3>Name of Service</h3>
            </a>
            <p>address of service</p>
            <hr />

        </div>
        <div class="col-md-2"></div>
    </div>


</div><!-- container -->

@section scripts {
    <script type="text/javascript">

        // Factory
        (function () {
            "use strict";

            angular.module('myApp')
                .factory('$serviceService', ServiceService)

            ServiceService.$inject = ['$http']

            function ServiceService($http) {
                return {
                    getServices: _getServices,
                    getTags: _getTags
                }

            function _getServices() {
                var settings = {
                    async: true,
                    crossDomain: true,
                    url: "http://localhost:60358/api/main",
                    method: "GET",
                }
            }
        })

        // Controller
        (function () {
            "use strict";

            angular.module('myApp')
                .controller("serviceController", ServiceController)

            ServiceController.$inject = ['$scope', "$serviceService"]

            function ServiceController($scope, $serviceService) {

                var vm = this;

                // All Tags that are populated on startup.
                vm.allTags = [{ name: "tag1" }, { name: "tag2" }, { name: "tag3" }];
                vm.currentTags = [];

                vm.$scope = $scope;
                vm.$serviceService = $serviceService;
                vm.currentTagsFilter = _currentTagsFilter;

                render();


            function render() {
                vm.$serviceService.getServices();
            }

                // Autocomplete function tags
                function _currentTagsFilter($query) {
                    var tags = vm.allTags;

                    return tags.filter(function (tag) {
                        return tag.name.toLowerCase().indexOf($query.toLowerCase()) != -1;
                    })
                }
            }
        })();

    </script>
}

